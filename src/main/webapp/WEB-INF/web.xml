<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
        id="WebApp_ID" version="3.0">
  <display-name>Archetype Created Web Application</display-name>
  
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:/application.xml</param-value>
  </context-param>
  
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:/log4j.properties</param-value>
  </context-param>
  
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>

  <filter>
    <filter-name>loginFilter</filter-name>
    <filter-class>cn.com.liuxg.sso.Filter.client.LoginFilter</filter-class>
    <init-param>
      <param-name>sso-server-login</param-name>
      <param-value>http://localhost:8080/login</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>loginFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>logoutFilter</filter-name>
    <filter-class>cn.com.liuxg.sso.Filter.client.LogoutFilter</filter-class>
    <init-param>
      <param-name>sso-server-logout</param-name>
      <param-value>http://localhost:8080/logout</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>logoutFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <servlet>
    <servlet-name>Spring MVC</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:/spring-web.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
    <!-- 为了解决客户端(浏览器)连接不上webSocket -->
    <async-supported>true</async-supported>
  </servlet>
  <servlet-mapping>
    <servlet-name>Spring MVC</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!--以下配置解决中文乱码问题-->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <!-- 为了解决客户端(浏览器)连接不上webSocket -->
    <async-supported>true</async-supported>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <welcome-file-list>
    <welcome-file>/login.jsp</welcome-file>
  </welcome-file-list>
  <!-- 异常跳转页面 -->
  <!--
      这里作为错误信息的最后一道防线，需要处理各种状态如：400，401，403，404，500等
      不仅仅局限在处理500异常
      错误页会区分处理404，401或403，500等情况
  -->
  <error-page>
    <error-code>400</error-code>
    <location>/common/error</location>
  </error-page>
  <error-page>
    <error-code>401</error-code>
    <location>/common/error</location>
  </error-page>
  <error-page>
    <error-code>403</error-code>
    <location>/common/error</location>
  </error-page>
  <error-page>
    <error-code>404</error-code>
    <location>/common/error</location>
  </error-page>
  <error-page>
    <error-code>500</error-code>
    <location>/common/error</location>
  </error-page>
</web-app>
